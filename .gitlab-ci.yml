variables:
  GIT_SUBMODULE_STRATEGY: recursive
  VIVADO_PATH: "/tools/Xilinx/Vivado/2018.3/bin/vivado"
  PROJECT_DIR: "vivado"
  PROJECT_NAME: "Genshin"
  TOP_MODULE_NAME: "nscscc_soc_top"


# all files in ip dir except *.xci are ignored, so the generated result will be cleaned every build
# to avoid generating from scratch every time, the dir should be cached
# cache:
#   key: "$CI_COMMIT_REF_SLUG"
#   paths:
    #最后记得加上IP核的缓存机制，以加快速度
    # - ${PROJECT_DIR}/${PROJECT_NAME}.srcs/sources_1/bd/bd_soc/ip
    # - ${PROJECT_DIR}/${PROJECT_NAME}.sim
    # - ${PROJECT_DIR}/${PROJECT_NAME}.runs
    # - ${PROJECT_DIR}/${PROJECT_NAME}.cache
    # - loongson/**/rtl/xilinx_ip
    # - loongson/**/run_vivado/mycpu_prj1/mycpu.sim
    # - loongson/**/run_vivado/mycpu_prj1/mycpu.runs
    # - loongson/**/run_vivado/mycpu_prj1/mycpu.cache
#AXI测试

stages:
  - Git_PASS
  - SRAM_TEST
  # - init_loongson_projects
  - AXI_TEST
  - PERF_TEST
  - bitstreams
  #- loongson_tests
  # - bitstreams


before_script:
  #- chmod -R 777 /tools/
  # - git checkout ${PROJECT_DIR}/${PROJECT_NAME}.srcs/sources_1/bd/bd_soc/ip
  # - git checkout loongson/soc_axi_func/rtl/xilinx_ip
  # - git checkout loongson/soc_axi_perf/rtl/xilinx_ip
#test
git_check:
  tags:
    - vivado
  stage: Git_PASS
  # script:
  #   - echo start to compile the project
  script:
    - echo you success send the file to the server!

cpu_simulation:
  tags:
    - vivado
  stage: SRAM_TEST
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[SRAM\]/i
  # script:
  #   - echo start to compile the project
  script:
    #- chmod -R 777 /home
    - echo start to compile the project
#    - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
#    - export SIMULATION=sim_1
    - export LOG_PATH=/root/Desktop/project_1/project_1.sim/sim_1/behav/xsim/simulate.log
    - export FLAG='\-\-\-\-PASS!!!'
    - ${VIVADO_PATH} -mode tcl -source /root/scripts/runsimulation.tcl /root/Desktop/project_1/project_1.xpr
    - bash /root/scripts/check_simulation.sh
  artifacts:
    paths:
      - /root/Desktop/project_1/project_1.sim/sim_1/behav/xsim/simulate.log
    when: always

    # - export SIMULATION=cpu_test
    # - export LOG_PATH=${PROJECT_DIR}/NonTrivialMIPS.sim/${SIMULATION}/behav/xsim/simulate.log
    # - export FLAG='Done'
  #   - ${VIVADO_PATH} -mode tcl -source scripts/run_simulation.tcl ${PROJECT_DIR}/NonTrivialMIPS.xpr
  #   - bash scripts/check_simulation.sh
  # artifacts:
  #   paths:
  #     - ${PROJECT_DIR}/NonTrivialMIPS.sim/*/behav/xsim/simulate.log
  #   when: always

axi_simulation:
  tags:
    - vivado
  stage: AXI_TEST
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[AXI\]/i
  # script:
  #   - echo start to compile the project
  script:
    #- chmod -R 777 /home
    - echo start to compile the project
#    - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
#    - export SIMULATION=sim_1
    - export LOG_PATH=/root/project_axi/project_axi.sim/sim_1/behav/xsim/simulate.log
    - export FLAG='\-\-\-\-PASS!!!'
    - ${VIVADO_PATH} -mode tcl -source /root/scripts/runsimulation-axi.tcl /root/project_axi/project_axi.xpr
    - bash /root/scripts/check_simulation.sh
  artifacts:
    paths:
      - /root/project_axi/project_axi.sim/sim_1/behav/xsim/simulate.log
    when: always



# build_ip_loongson_func:
#   image: vivado:2018.3
#   tags:
#     - vivado
#   stage: init_loongson_projects
#   only:
#     variables:
#       - $CI_COMMIT_MESSAGE =~ /\[func/i
#   script:
#     - ${VIVADO_PATH} -mode tcl -source scripts/generate_all_ips.tcl loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.xpr


# build_ip_loongson_perf:
#   image: vivado:2018.3
#   tags:
#     - vivado
#   stage: init_loongson_projects
#   only:
#     variables:
#       - $CI_COMMIT_MESSAGE =~ /\[perf/i
#   script:
#     - ${VIVADO_PATH} -mode tcl -source scripts/generate_all_ips.tcl loongson/soc_axi_perf/run_vivado/mycpu_prj1/mycpu.xpr



# func_test_simulation:
#   tags:
#     - vivado
#   stage: loongson_tests
#   # run functional test only when specified, for it is too slow
#   only:
#     variables:
#       - $CI_COMMIT_MESSAGE =~ /\[func test\]/i
#   script:
#     - sed -i "s/\`define COMPILE_FULL_M/\\/\\/ \`define COMPILE_FULL_M/" src/compile_options.svh
#     - export SIMULATION=sim_1
#     - export LOG_PATH=loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.sim/${SIMULATION}/behav/xsim/simulate.log
#     - export FLAG='\-\-\-\-PASS!!!'
#     - ${VIVADO_PATH} -mode tcl -source scripts/run_simulation.tcl loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.xpr
#     - bash scripts/check_simulation.sh
#   artifacts:
#     paths:
#       - loongson/soc_axi_func/run_vivado/mycpu_prj1/mycpu.sim/*/behav/xsim/simulate.log
#     when: always

  
perf_test_simulation:
  tags:
    - vivado
  stage: PERF_TEST
  # run performance test only when specified, for it is also slow
  # the result of performance test will not be checked
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[PERF\]/i
  script:
    #- chmod -R 777 /home
    - ${VIVADO_PATH} -mode tcl -source /tools/run_allbench.tcl /tools/project_perf/project_perf.xpr
  artifacts:
    paths:
      - /tools/project_perf/project_perf.sim/sim_1/behav/xsim/simulate.log
    when: always


func_test_bitstream:
  tags:
    - vivado
  stage: bitstreams
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[fbit\]/i
  script:
    - ${VIVADO_PATH} -mode tcl -source /tools/generate_bitstream.tcl /root/project_axi/project_axi.xpr
  artifacts:
    paths:
      - /root/project_axi/project_axi.runs/impl_1/soc_axi_lite_top.bit
      - /root/project_axi/project_axi.runs/*/runme.log
    when: always

#pbit生成bit流测试
perf_test_bitstream:
  tags:
    - vivado
  stage: bitstreams
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /\[pbit\]/i
  script:
    - ${VIVADO_PATH} -mode tcl -source /tools/generate_bitstream.tcl /tools/project_perf/project_perf.xpr
  artifacts:
    paths:
      - /tools/project_perf/project_perf.runs/impl_1/soc_axi_lite_top.bit
      - /tools/project_perf/project_perf.runs/*/runme.log
    when: always


# soc_bitstream:
#   image: vivado:2018.3
#   tags:
#     - vivado
#   stage: bitstreams
#   only:
#     variables:
#       - $CI_COMMIT_MESSAGE =~ /\[soc bitstream\]/i
#   script:
#     - ${VIVADO_PATH} -mode tcl -source scripts/build_soc.tcl ${PROJECT_DIR}/${PROJECT_NAME}.xpr
#   artifacts:
#     paths:
#       - ${PROJECT_DIR}/${PROJECT_NAME}.runs/impl_1/*.bit
#       - ${PROJECT_DIR}/${PROJECT_NAME}.runs/impl_1/*.ltx
#       - ${PROJECT_DIR}/${PROJECT_NAME}.runs/*/runme.log
#     when: always
